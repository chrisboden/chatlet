name: Publish Python Package

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version bump type (minor or major)'
        required: true
        type: choice
        options:
          - minor
          - major

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build semver
    - name: Calculate new version
      id: version
      run: |
        current_version=$(grep -oP "(?<=version=\")[^\"]+" setup.py)
        echo "Current version: $current_version"
        if [ "${{ github.event.inputs.bump }}" == "minor" ]; then
          new_version=$(python -c "import semver; print(semver.VersionInfo.parse('$current_version').bump_minor())")
        else
          new_version=$(python -c "import semver; print(semver.VersionInfo.parse('$current_version').bump_major())")
        fi
        echo "New version: $new_version"
        echo "new_version=$new_version" >> $GITHUB_OUTPUT
    - name: Update version in setup.py
      run: |
        sed -i 's/version="[^"]*"/version="${{ steps.version.outputs.new_version }}"/' setup.py
    - name: Update version in __init__.py
      run: |
        sed -i 's/__version__ = "[^"]*"/__version__ = "${{ steps.version.outputs.new_version }}"/' __init__.py
    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        git config --local user.email "bomboze@gmail.com"
        git config --local user.name "Slava (auto)"
        git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
        git add setup.py __init__.py
        git commit -m "Bump version to ${{ steps.version.outputs.new_version }}"
        git push
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        tag_name: v${{ steps.version.outputs.new_version }}
        release_name: Release ${{ steps.version.outputs.new_version }}
        draft: false
        prerelease: false
    - name: Build package
      run: python -m build
#    - name: Publish package
#      uses: pypa/gh-action-pypi-publish@fb9fc6a4e67ca27a7a76b17bbf90be83c2d3c716
#      with:
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}
