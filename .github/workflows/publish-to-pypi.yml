name: Publish Python Package

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: 'New version number'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Show current version
      run: |
        current_version=$(grep -oP "(?<=version=\")[^\"]+" setup.py)
        echo "Current version: $current_version"
    - name: Update version in setup.py
      run: |
        sed -i 's/version="[^"]*"/version="${{ github.event.inputs.new_version }}"/' setup.py
    - name: Update version in __init__.py
      run: |
        sed -i 's/__version__ = "[^"]*"/__version__ = "${{ github.event.inputs.new_version }}"/' __init__.py
    - name: Update version in publish-to-pypi.yml
      run: |
        sed -i 's/description: '"'"'New version number (current: [0-9.]*)/description: '"'"'New version number (current: ${{ github.event.inputs.new_version }})/' .github/workflows/publish-to-pypi.yml
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add setup.py __init__.py .github/workflows/publish-to-pypi.yml
        git commit -m "Bump version to ${{ github.event.inputs.new_version }}"
        git push
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.new_version }}
        release_name: Release ${{ github.event.inputs.new_version }}
        draft: false
        prerelease: false
    - name: Build package
      run: python -m build
#    - name: Publish package
#      uses: pypa/gh-action-pypi-publish@fb9fc6a4e67ca27a7a76b17bbf90be83c2d3c716
#      with:
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}
